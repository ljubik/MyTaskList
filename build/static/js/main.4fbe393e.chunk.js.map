{"version":3,"sources":["array/ArrayComp.js","components/App.js","components/SubTaskAdd.js","localstore/storageService.js","components/TaskForm.js","components/Status.js","components/ShowHide.js","localstore/LocalStore.js","index.js"],"names":["staticArr","countAdd","countRem","ArrayComp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","myArray","valueArray","input","React","createRef","handleFormSubmit","bind","assertThisInitialized","handleAdd","handleRemove","push","console","log","localStorage","setItem","splice","removeItem","getItem","react_default","a","createElement","className","type","ref","name","onClick","handleLocal","Component","App","state","loading","setState","role","Link","to","data-toggle","SubTaskAdd","handleChange","handleAddShareholder","subName","_this$props","onSubmit","taskId","isChecked","current","value","event","target","label","btnLable","placeholder","onChange","key","_default","clearAll","clear","newTask","subTask","TaskForm","handleRemoveShareholder","idx","taskList","JSON","stringify","handleRemoveSubTask","subTaskId","arguments","length","undefined","handleSubTaskSubmit","handleNameChange","handleBoxChange","handleSubmit","checkboxChange","_","isEmpty","parse","checked","preventDefault","_this$state","task","data","sub","taskIndex","subTaskIndex","_this2","src_components_App","required","tabIndex","map","components_SubTaskAdd","i","defaultChecked","handleLokalStoreClear","SetFireMessage","SnuffOutMessage","Indicator","isBurning","SetFireButton","SnuffOutButton","FirePlace","onSetFire","onSnuffOut","button","DangerAlert","text","ShowHide","isDangerAlertShowed","toggleDangerAlert","prevState","LocalStore","newItem","list","demoData","testItem","updateInputDemo","addDemoItem","defineProperty","id","Math","random","slice","toConsumableArray","updatedList","filter","item","e","index","style","padding","textAlign","maxWidth","margin","updateInput","addItem","disabled","deleteItem","ReactDOM","render","BrowserRouter","history","Route","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.4fbe393e.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\n\r\nclass myArr {\r\n    constructor(props) {\r\n      this.input = props.staticArr || [];\r\n\r\n    }\r\n\r\n} \r\n\r\n// localStorage.setItem('myKey', 'myValue');\r\nvar staticArr = [];\r\n//var add = 'test';\r\nvar countAdd = 0;\r\nvar countRem = 0;\r\n\r\n\r\n\r\nclass ArrayComp extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.myArray = {\r\n            valueArray: [],\r\n        };\r\n        this.input = React.createRef();\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n      }\r\n      \r\n//Додавання в даних масив \r\nhandleFormSubmit() {\r\n    debugger;\r\n        // add = this.input.current.value;\r\n        \r\n        // staticArr.push(add);\r\n        \r\n        // console.log('miy handle submit', add);\r\n        \r\n}\r\n\r\n \r\nhandleAdd() {\r\n\r\n    countAdd = countAdd+1;\r\n    staticArr.push(countAdd);\r\n    console.log(staticArr);\r\n    // try {\r\n        localStorage.setItem('user', '{countAdd}');\r\n    //   } catch (e) {\r\n    //     if (e == this.QUOTA_EXCEEDED_ERR) {\r\n    //      alert('перевищено ліміт додавання');\r\n    //     }\r\n    //   }\r\n}\r\n\r\nhandleRemove(){\r\n    \r\n    countRem = countRem-1;\r\n    staticArr.splice(countRem, 1);\r\n    console.log(staticArr);\r\n    localStorage.removeItem(\"myKey\");\r\n    console.log('Local store remove', localStorage);\r\n}\r\n\r\nhandleLocal() {\r\n    var localValue = localStorage.getItem('myKey');\r\n    var obj = {\r\n        item1: 1,\r\n        item2: [123, \"two\", 3.0],\r\n        item3:\"hello\"\r\n    };\r\n   \r\n   console.log(localStorage.getItem);\r\n}\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"Container\">\r\n            <form >\r\n            <input \r\n              type=\"text\"\r\n              ref={this.input}\r\n              name=\"valueArray\"\r\n            />\r\n            <button onClick={this.handleFormSubmit}>ADD</button>\r\n            </form>\r\n            \r\n\r\n            {/* {this.staticArr.map((id, value) => (<div key={id}>{value}</div>))} */}\r\n            {/* {this.state.staticArr.map()} */}\r\n            <button onClick={this.handleAdd}>ADD мої статичні дані елемент {countAdd} </button>\r\n            <button onClick={this.handleRemove}>Remove мої статичні дані елемент {countRem} </button>\r\n            <p><button onClick={this.handleLocal}>work localStorage</button>\r\n</p>\r\n            {/* {console.log(this.input)} */}\r\n            \r\n            </div>        \r\n        );\r\n    }\r\n}\r\n\r\nexport default ArrayComp;\r\n\r\n\r\n// Завдання на LocalSotage:\r\n// 1. створити джаваскрипт модуль storageService який буде містити дві функції setItem, getItem\r\n// 2. Створити реакт компоненту яка на componentDidMount буде витягувати всі Таски з LocalSotage використовуючи модуль storageService і записувати їх у власний стейт\r\n// 3. При додаванні/редагуванні нової таски LocalSotage має обновлятись\r\n","import React, {Component} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './App.css';\r\nimport { Route, Link } from 'react-router-dom';\r\n\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    loading: true,\r\n  }\r\n\r\n  async componentDidMount(){\r\n    this.setState({\r\n      loading: false,\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    if (this.setState.loading) {\r\n      return <h2>Loading...</h2>\r\n    }\r\n     \r\n  return (  \r\n    <div className=\"menu\">\r\n      <nav className=\"navbar navbar-default\" role=\"navigation\">\r\n        <ul className=\"nav-justified\"> \r\n          <li><Link to=\"/\" className=\"dropdown-toggle\" data-toggle=\"dropdown\">HOME <span className=\"caret\"></span></Link></li>   \r\n          <li><Link to=\"/components/TaskForm\">TaskForm </Link></li>\r\n          <li><Link to=\"/components/FirePlace\">FirePlace </Link></li>\r\n          <li><Link to=\"/components/ShowHide\">ShowHide </Link></li>\r\n          <li><Link to=\"/components/CheckArr\">CheckArr </Link></li>\r\n          <li><Link to=\"/array/ArrayComp\">ArrayComp </Link></li>\r\n          <li><Link to=\"/localstore/LocalStore\">LocalStore </Link></li>\r\n        </ul> \r\n      </nav> \r\n    </div>       \r\n  );\r\n  };\r\n};\r\n \r\nexport default App;\r\n","import React, {Component} from 'react';\r\n\r\nclass SubTaskAdd extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleAddShareholder = this.handleAddShareholder.bind(this)\r\n        this.input = React.createRef();\r\n        this.state = {\r\n            subName: '',\r\n        };\r\n        \r\n    }\r\n    handleAddShareholder() {\r\n     const {onSubmit, taskId} = this.props;\r\n     console.log(\"handleAddShareholder\", this.state, \"from subTaskAdd\")\r\n     if(typeof onSubmit === \"function\") {\r\n        onSubmit({\r\n            subName: this.state.subName,\r\n            taskId: taskId,\r\n            isChecked: false,\r\n        });\r\n     }\r\n        this.input.current.value = '';\r\n        this.setState({\r\n            subName: '',\r\n            isChecked: false,\r\n        })\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            subName: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const label = this.props.btnLable || \"Додати завдання\"\r\n        return (\r\n        <div>\r\n        <input\r\n            type=\"text\"\r\n            ref={this.input}\r\n            name=\"MinTask\"\r\n            placeholder={`Завдання`}\r\n            onChange={this.handleChange}\r\n        />\r\n          <button type=\"button\" \r\n          onClick={this.handleAddShareholder} \r\n          className=\"small\">{label}\r\n          </button>\r\n                    \r\n          \r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default SubTaskAdd;","export function setItem(key, value) {\r\n  localStorage.setItem(key, value);\r\n};\r\n\r\nexport function getItem(key, _default) {\r\n  return localStorage.getItem(key) || _default;\r\n};\r\n\r\nexport function clearAll() {\r\n  localStorage.clear();\r\n  \r\n};\r\n\r\nexport default function removeItem(key) {\r\n  localStorage.removeItem(key);\r\n};","import React, {Component} from 'react';\r\nimport _ from 'lodash';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport SubTaskAdd from './SubTaskAdd';\r\nimport T from 'prop-types';\r\nimport App from './App';\r\nimport {getItem, setItem, clearAll } from '../localstore/storageService';\r\n// import SimpleStorage from \"react-simple-storage\";\r\n\r\nclass newTask {\r\n  constructor(props) {\r\n    this.name = props.name || 'Some name';\r\n    this.subTask = props.subTask || [];\r\n  }\r\n} \r\n// Інший спосіб створити обєкт\r\n// function newTask1(props) {\r\n//     this.name = props.name || 'Some name';\r\n//     this.subTask = props.subTask || [];\r\n// } \r\nfunction _getProprety(object, key, _default) {\r\n  if(object !== undefined && object[key] !== undefined) {\r\n    return object[key];\r\n  }\r\n  return _default;\r\n}\r\n\r\nclass TaskForm extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      taskList: [],\r\n      isChecked: true,\r\n      loading: true,\r\n        \r\n    };\r\n    this.input = React.createRef();\r\n    this.handleSubTaskSubmit = this.handleSubTaskSubmit.bind(this);//bind треба обовязково робити\r\n    this.handleRemoveShareholder = this.handleRemoveShareholder.bind(this);\r\n    this.handleRemoveSubTask = this.handleRemoveSubTask.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleBoxChange = this.handleBoxChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.checkboxChange = this.checkboxChange.bind(this);\r\n  }\r\n  \r\n  async componentDidMount(){\r\n    const taskList = getItem('taskList');\r\n\r\n    if(_.isEmpty(taskList)) {\r\n      clearAll();\r\n    }else {\r\n      this.setState({taskList: JSON.parse(taskList)})\r\n    }\r\n\r\n    //clearAll();\r\n      this.setState({\r\n        loading: false,\r\n      })\r\n  }\r\n    \r\n  handleNameChange (event) {\r\n      this.setState({ name: event.target.value });  \r\n  }\r\n\r\n  handleBoxChange (event) {\r\n      this.setState( {isChecked: event.target.checked});       \r\n  }\r\n     \r\n  handleSubmit (event) {\r\n      event.preventDefault();\r\n      const { name, taskList } = this.state;\r\n      const task = new newTask({\r\n        name: name,\r\n        \r\n      });\r\n      taskList.push(task);\r\n      this.input.current.value = '';\r\n      this.setState({\r\n        name: '',\r\n        taskList: taskList,\r\n        \r\n      })\r\n      \r\n      setItem('taskList', JSON.stringify(taskList));\r\n\r\n  }\r\n    \r\n//для стирання цілого блоку\r\n  handleRemoveShareholder = (idx) => () => {\r\n    this.state.taskList.splice(idx, 1);\r\n    this.setState({taskList: this.state.taskList});\r\n    // //стара реалізація через фільтр, має глюк не видаляє останній елемент  \r\n    // this.setState({ \r\n    //     taskList: this.state.taskList.filter\r\n    //     ((s, sidx) => idx !== sidx) });\r\n    //     //const taskList = this.state.taskList;\r\n    setItem('taskList', JSON.stringify(this.state.taskList));\r\n\r\n  }\r\n\r\n//для стирання одного завдання\r\n  handleRemoveSubTask = (taskId, subTaskId, _nameKey = 'subTask' ) => () => {\r\n    // if(!_nameKey) {\r\n    //   _nameKey = 'subTask';\r\n    // }\r\n    // Ідентична логіка\r\n    // _nameKey = _nameKey || 'subTask';\r\n\r\n    // 1 вибираємо таску по taskId. в вибраній тасці звертаємось до масиву \r\n    // subTask і видаляємо з нього саб таску з subTaskId\r\n    // const _task = this.state.taskList[taskId];\r\n    // console.log(_task);\r\n    // const _subTask = _.get(_task, 'subTask[0].subName', []);\r\n    // console.log(_subTask);\r\n    this.state.taskList[taskId].subTask.splice(subTaskId, 1);\r\n    this.setState({taskList: this.state.taskList});\r\n    setItem('taskList', JSON.stringify(this.state.taskList));\r\n  }\r\n\r\n\r\n//Додавання в масив даних\r\n  handleSubTaskSubmit(data) {\r\n      console.log(\"Додавання в масив\", data)\r\n      const {taskId, subName, isChecked} = data;//отримуємо дані з суб таску\r\n      const {taskList} = this.state;\r\n      taskList[taskId].subTask.push({subName: subName, isChecked: isChecked});//додавання в масив в елемент таск ід\r\n      //console.log(taskList, \"recive dani\");\r\n      this.setState({taskList:taskList});\r\n      \r\n      setItem('taskList', JSON.stringify(taskList));\r\n  }\r\n\r\n// зміна стану чекбокс\r\n  checkboxChange(sub, taskIndex, subTaskIndex){\r\n      console.log('is checked', this.state.isChecked);\r\n      sub.isChecked = !sub.isChecked;\r\n      const task = this.state.taskList[taskIndex];\r\n      //console.log('after chenge', this.state.taskList[taskIndex]);\r\n      task[subTaskIndex] = sub;\r\n      this.setState({taskList:this.state.taskList});\r\n      setItem('taskList', JSON.stringify(this.state.taskList));\r\n  }\r\n\r\n  handleLokalStoreClear(){\r\n    clearAll();\r\n  }\r\n    \r\n\r\n  render() { \r\n      //Для показування завантаження при запуску\r\n      if (this.setState.loading) {\r\n        return <h2>Loading...</h2>\r\n      }\r\n      \r\n       \r\n      const { taskList } = this.state;\r\n      console.log(\"Log from start\", taskList);\r\n      //console.log(\"Log\", _.isEmpty(taskList)); \r\n         \r\n      return (\r\n        <div className=\"Container\">\r\n           <App />\r\n           <div className=\"jumbotron\">\r\n           <h1 className =\"display-3\">\r\n           {/* <SimpleStorage parent={this} /> */}\r\n          Список справ\r\n           </h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <h4>Назва завдання</h4>\r\n            <input required\r\n              type=\"text\"\r\n              name=\"taskName\"\r\n              tabIndex=\"1\"\r\n              placeholder=\"Task name\"\r\n              ref={this.input}\r\n              onChange={this.handleNameChange}\r\n            />\r\n            <button>Save</button>\r\n          </form>\r\n          <h4>Складові завдання</h4>\r\n        \r\n          {taskList.map((task, idx) => (\r\n            <div key={idx} className=\"shareholder\">\r\n              <h4>{task.name}</h4>\r\n              <button \r\n              type=\"button\" \r\n              onClick={this.handleRemoveShareholder(idx)} \r\n              className=\"small\">Видалити завдання</button>\r\n              <ul>\r\n              <li>\r\n                <SubTaskAdd taskId={idx} \r\n                btnLable=\"Save\" \r\n                onSubmit={this.handleSubTaskSubmit}\r\n                ></SubTaskAdd>\r\n              </li>\r\n                {task.subTask.map((sub, i) => (<li key={i}>{sub.subName}\r\n                <input type=\"checkbox\" \r\n                name=\"statOk\" \r\n                value=\"\"\r\n                defaultChecked={sub.isChecked}\r\n                onChange={() => this.checkboxChange(sub, idx, i)}>\r\n                </input>\r\n                \r\n                <button \r\n                type=\"button\" \r\n                onClick={this.handleRemoveSubTask(idx, i, 'name')}\r\n                className=\"small\">Видалити складові завдання</button>\r\n                </li>))\r\n              }\r\n              </ul>\r\n              \r\n            </div>\r\n          ))}\r\n          </div>\r\n          \r\n          <button \r\n                type=\"button\" \r\n                onClick={this.handleLokalStoreClear} \r\n                className=\"small\">localstore clear</button>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nTaskForm.propTypes = {\r\n  name: T.string,\r\n  taskList: T.array,\r\n  onClick: T.func,\r\n  isChecked: T.bool\r\n}\r\n\r\nexport default TaskForm;\r\n","import React from 'react';\r\nimport './Status.css';\r\nimport App from './App';\r\n\r\nclass FirePlace extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onSetFire = this.onSetFire.bind(this);\r\n      this.onSnuffOut = this.onSnuffOut.bind(this);\r\n      this.state = {isBurning: false};\r\n    }\r\n  \r\n    onSetFire() {\r\n      this.setState({isBurning: true});\r\n    }\r\n  \r\n    onSnuffOut() {\r\n      this.setState({isBurning: false});\r\n    }\r\n  \r\n    render() {\r\n      const isBurning = this.state.isBurning;\r\n      \r\n      let button = null;\r\n      if(isBurning){\r\n        button = <SnuffOutButton onClick={this.onSnuffOut} /> \r\n      } else {\r\n        button = <SetFireButton onClick={this.onSetFire} />\r\n      }\r\n      return (\r\n        <div>\r\n        <App />\r\n          <Indicator isBurning={isBurning} />\r\n          {button}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  function SetFireMessage(props) {\r\n    return <h3>Камін горить!</h3>;\r\n  }\r\n  \r\n  function SnuffOutMessage(props) {\r\n    return <h3>Камін не горить</h3>;\r\n  }\r\n  \r\n  function Indicator(props) {\r\n    const isBurning = props.isBurning;\r\n    if(isBurning){\r\n      return <SetFireMessage />;\r\n    }\r\n    return <SnuffOutMessage />;\r\n  }\r\n  \r\n  function SetFireButton(props) {\r\n    return (<button className=\"orange\" onClick={props.onClick}>Запалити</button>);\r\n  }\r\n  \r\n  function SnuffOutButton(props) {\r\n    return (<button className=\"blue\" onClick={props.onClick}>Загасити</button>);\r\n  }\r\n  \r\n  export default FirePlace;\r\n  ","import React from 'react';\r\nimport App from './App';\r\n\r\nfunction DangerAlert(props) {\r\n    return (\r\n      <h3 className=\"alert alert-danger\">{props.text}</h3>\r\n    );\r\n  }\r\n  \r\n  class ShowHide extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {isDangerAlertShowed: true}\r\n      this.toggleDangerAlert = this.toggleDangerAlert.bind(this);\r\n    }\r\n  \r\n    toggleDangerAlert() {\r\n      this.setState(prevState => ({\r\n        isDangerAlertShowed: !prevState.isDangerAlertShowed\r\n      }));\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <App />\r\n          {this.state.isDangerAlertShowed ? \r\n            <DangerAlert text={'Увага! В додатку виникла помилка'} /> : null}\r\n          <button onClick={this.toggleDangerAlert}>\r\n            {this.state.isDangerAlertShowed ? 'Сховати' : 'Показати'}\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  export default ShowHide;\r\n  ","import React, { Component } from \"react\";\r\nimport {getItem, setItem } from './storageService';\r\n\r\nclass LocalStore extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newItem: \"\",\r\n      list: [],\r\n      demoData: [],\r\n      testItem: ''\r\n    };\r\n    this.updateInputDemo = this.updateInputDemo.bind(this);\r\n    this.addDemoItem = this.addDemoItem.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const demoData = getItem('demoData');\r\n    if(demoData) {\r\n      this.setState({demoData: JSON.parse(demoData)})\r\n    }\r\n  }\r\n\r\n  updateInput(key, value) {\r\n    // update react state\r\n    this.setState({ [key]: value });\r\n  }\r\n  updateInputDemo(key, value) {\r\n    // update react state\r\n\r\n    this.setState({ [key]: value });\r\n  }\r\n  addDemoItem() {\r\n    const {demoData, testItem} = this.state;\r\n    demoData.push(testItem);\r\n    this.setState({demoData, testItem: ''});\r\n    setItem('demoData', JSON.stringify(demoData));\r\n  }\r\n  addItem() {\r\n    // create a new item with unique id\r\n    const newItem = {\r\n      id: 1 + Math.random(),\r\n      value: this.state.newItem.slice()\r\n    };\r\n\r\n    // copy current list of items\r\n    const list = [...this.state.list];\r\n\r\n    // add the new item to the list\r\n    list.push(newItem);\r\n\r\n    // update state with new list, reset the new item input\r\n    this.setState({\r\n      list,\r\n      newItem: \"\"\r\n    });\r\n  }\r\n\r\n  deleteItem(id) {\r\n    // copy current list of items\r\n    const list = [...this.state.list];\r\n    // filter out the item being deleted\r\n    const updatedList = list.filter(item => item.id !== id);\r\n\r\n    this.setState({ list: updatedList });\r\n  }\r\n\r\n  render() {\r\n    const {demoData} = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <h1 className=\"App-title\">Welcome to React LocalStorage Tutorial</h1>\r\n        </header>\r\n        {/*begin*/}\r\n        <div>\r\n          <h3>Приклад</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type item here\"\r\n            value={this.state.testItem}\r\n            onChange={e => this.updateInputDemo(\"testItem\", e.target.value)}\r\n          />\r\n          <button\r\n            onClick={() => this.addDemoItem()}\r\n          >&#43; Add\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <ul>\r\n            {demoData.map((item, index ) => {\r\n              return (\r\n                <li key={index}>\r\n                  {item}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        {/*End */}\r\n        <div\r\n          style={{\r\n            padding: 50,\r\n            textAlign: \"left\",\r\n            maxWidth: 500,\r\n            margin: \"auto\"\r\n          }}\r\n        >\r\n          Add an item to the list\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Type item here\"\r\n            value={this.state.newItem}\r\n            onChange={e => this.updateInput(\"newItem\", e.target.value)}\r\n          />\r\n          <button\r\n            onClick={() => this.addItem()}\r\n            disabled={!this.state.newItem.length}\r\n          >\r\n            &#43; Add\r\n          </button>\r\n          <br /> <br />\r\n          <ul>\r\n            {this.state.list.map(item => {\r\n              return (\r\n                <li key={item.id}>\r\n                  {item.value}\r\n                  <button onClick={() => this.deleteItem(item.id)}>\r\n                    Remove\r\n                  </button>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LocalStore;","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Route, Link, heshHistory } from 'react-router-dom';\r\nimport ArrayComp from './array/ArrayComp.js';\r\nimport App from './components/App';\r\nimport TaskForm from './components/TaskForm';\r\n// import CheckArr from './components/CheckArr';\r\nimport FirePlace from './components/Status';\r\nimport ShowHide from './components/ShowHide';\r\nimport LocalStore from './localstore/LocalStore';\r\n\r\n\r\nReactDOM.render(\r\n  <Router history=\"heshHistory\">\r\n    <div>\r\n      <Route exact path=\"/\" component={App}/>\r\n      <Route path=\"/components/TaskForm\" component={TaskForm}/>\r\n      <Route path=\"/components/FirePlace\" component={FirePlace}/>\r\n      <Route path=\"/components/ShowHide\" component={ShowHide}/>\r\n      {/*<Route path=\"/components/CheckArr\" component={CheckArr}/>*/}\r\n      <Route path=\"/array/ArrayComp\" component={ArrayComp}/>\r\n       <Route path=\"/localstore/LocalStore\" component={LocalStore}/>\r\n    </div>\r\n  </Router>, \r\ndocument.getElementById('root'));\r\n"],"sourceRoot":""}